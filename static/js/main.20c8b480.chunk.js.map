{"version":3,"sources":["SeasonDisplay.js","Loader.js","App.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","console","log","lat","month","season","Date","getMonth","className","Loder","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,qBACNC,SAAU,eA6BHE,EAfO,SAAAC,GAClBC,QAAQC,IAAIF,EAAMG,KAClB,IAXeA,EAAKC,EAWdC,GAXSF,EAWUH,EAAMG,KAXXC,GAWgB,IAAIE,MAAOC,YAVnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAKL,EAGFT,EAAaW,GAA/BT,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,SAEb,OACI,yBAAKW,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBX,EAAvB,WACZ,4BAAKD,EAAL,MACA,uBAAGY,UAAS,6BAAwBX,EAAxB,aChClBY,EAAQ,SAACT,GACX,OACI,yBAAKQ,UAAU,gDACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,2BAA2BR,EAAMU,YAKhED,EAAME,aAAe,CACjBD,QAAS,cAGED,QC2BAG,E,4MApCXC,MAAQ,CACJV,IAAK,KACLW,aAAc,I,kEAGG,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACjB,IAAKgB,EAASE,OAAOC,cAChD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIb,e,sCAM5C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,uCAAaqB,KAAKX,MAAMC,eAE9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAChC,6BAAK,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,OAGxC,6BAAK,kBAAC,EAAD,CAAOO,QAAQ,sC,+BAM3B,OACI,yBAAKF,UAAU,UACVgB,KAAKC,qB,GA9BJC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.20c8b480.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\nimport React from 'react';\n\n\nconst seasonConfig = {\n    summer: {\n        text: \"Let's hit the beach\",\n        iconName: 'sun'\n    },\n    winter: {\n        text: \"Burr, It is Chilly\",\n        iconName: 'snowflake'\n    }\n}\n\n//helper function\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    }else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\n\n\nconst SeasonDisplay = props => {\n    console.log(props.lat);\n    const season = getSeason(props.lat, new Date().getMonth());\n    const {text, iconName} = seasonConfig[season]\n    \n    return(\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{text}  </h1>\n            <i className={`icon-right massive ${iconName} icon`} />\n        </div>\n    )\n};\n\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Loder = (props) => {\n    return (\n        <div className=\"ui active transition visible inverted dimmer\">\n            <div className=\"content\">\n                <div className=\"ui inverted text loader\">{props.message}</div>\n            </div>\n        </div>\n    )\n}\nLoder.defaultProps = {\n    message: 'Loading...'\n}\n\nexport default Loder;","import React from \"react\";\nimport SeasonDisplay from './SeasonDisplay';\nimport Loder from './Loader';\n\n\nclass App extends React.Component {\n    state = {\n        lat: null,\n        errorMessage: ''\n    };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({lat: position.coords.latitude}),\n            err => this.setState({errorMessage: err.message})\n        );\n    }\n    \n    //helper function\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div> ;\n        }\n        if (!this.state.errorMessage && this.state.lat) {\n            return <div><SeasonDisplay lat={this.state.lat} /></div>;\n        }\n        \n        return <div><Loder message=\"Please Accept location request\" /></div>\n    }\n\n\n    //requirement for react\n    render() {\n        return (\n            <div className=\"border\">\n                {this.renderContent()}\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}